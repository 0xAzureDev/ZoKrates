import "utils/multiplexer/lookup3bitSigned" as lookup

def first() -> (field):
	bool[3] sel = [true, true, true]
	field[4] t  = [0, 1, 2 , 3]
	
	0 == lookup(sel, t)
	
	return 1

def firstNeg() -> (field):
	bool[3] sel = [false, false, true]
	field[4] t  = [0, 1, 2 , 3]
	
	0 == lookup(sel, t)
	
	return 1

def second() -> (field):
	bool[3] sel = [true, false, false]
	field[4] t  = [0, 1, 2 , 3]
	
	1 == lookup(sel, t)
	
	return 1

def secondNeg() -> (field):
	bool[3] sel = [true, false, true]
	field[4] t  = [0, 1, 2 , 3]
	
	field out = 0 - 1
	out == lookup(sel, t)
	
	return 1

def third() -> (field):
	bool[3] sel = [false, true, false]
	field[4] t  = [0, 1, 2 , 3]
	
	2 == lookup(sel, t)
	
	return 1

def thirdNeg() -> (field):
	bool[3] sel = [false, true, true]
	field[4] t  = [0, 1, 2 , 3]
	
	field out = 0 - 2
	out == lookup(sel, t)
	
	return 1

def fourth() -> (field):
	bool[3] sel = [true, true, false]
	field[4] t  = [0, 1, 2 , 3]
	
	3 == lookup(sel, t)
	
	return 1

def fourthNeg() -> (field):
	bool[3] sel = [true, true, true]
	field[4] t  = [0, 1, 2 , 3]
	
	field out = 0 - 3
	out == lookup(sel, t)
	
	return 1
	
def main() -> (field):

	1 == first()
	1 == firstNeg()
	1 == second()
	1 == secondNeg()
	1 == third()
	1 == thirdNeg()
	1 == fourth()
	1 == fourthNeg()
	
	return 1