import "./MiMCFeistel" as MiMCFeistel

def main(field[2] ins, field k) -> (field[3]):
	//nInputs = 2, nOutputs = 3,
	field nInputs = 2
	field nOutputs = 3 
	field[4][2] S = [[0; 2]; 4] // length is equal to nInputs + nOutputs - 1
	field[3] outs = [0; 3]

	for field i in 0..nInputs do
		field idx = if i == 0 then 0 else i - 1 fi
		S[i] = if i == 0 then MiMCFeistel(ins[0], 0, k) else MiMCFeistel(S[idx][0] + ins[i], S[idx][1], k) fi
	endfor
	outs[0] = S[nInputs - 1][0]

	for field i in 0..(nOutputs - 1) do
		field[2] res = MiMCFeistel(S[nInputs + i - 1][0], S[nInputs + i - 1][1], k)
		S[nInputs + i] = res // have to do it like this for some reason
		outs[i + 1] = S[nInputs + i][0]
	endfor 

	return outs
