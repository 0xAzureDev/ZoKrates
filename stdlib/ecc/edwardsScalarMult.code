import "ecc/edwardsAdd.code" as add
import "ecc/edwardsOnCurve.code" as assertOnCurve

def main(field[256] exponent, field[2] pt, field[10] context) -> (field[2]):
    //TODO: exponent can be field element as needs to be smaller than order
    //TODO: check scalar > 0
    //FIXME: how to deal with bool checks

    field[2] infinity = [context[2], context[3]] 

    field[2] doubledP = pt
    field[2] accumulatedP = infinity 

    field j = 255 
    accumulatedP = if exponent[j] == 1 then doubledP else accumulatedP fi
    
    for field i in 1..256 do
        j = 255 - i 
        doubledP = add(doubledP, doubledP, context)
        candidateP = add(accumulatedP, doubledP, context)
        accumulatedP = if exponent[j] == 1 then candidateP else accumulatedP fi
    endfor

    1 == assertOnCurve(accumulatedP, context)

    return accumulatedP