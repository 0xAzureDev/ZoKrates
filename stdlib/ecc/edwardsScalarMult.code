import "./edwardsAdd.code" as add
import "./edwardsOnCurve.code" as assertOnCurve
// import "./../ZoKrates_primitives/isBooleanValue.code" as boolCheck

def main(field[256] exponent, field[8] params) -> (field[2]):
    //FIXME: exponent can be field element as needs to be smaller than order
    //FIXME: how to deal with bool checks

    //TODO: check scalar > 0

    field zerou = params[2] 
    field zerov = params[3]
    field gu = params[4] 
    field gv = params[5]  

    field[2] doubledPoint = [gu, gv]
    field[2] currentP = [zerou, zerov]

    field j = 255
    // 1 == boolCheck(exponent[j])
    currentP[0] = if exponent[j] == 1 then doubledPoint[0] else currentP[0] fi
    currentP[1] = if exponent[j] == 1 then doubledPoint[1] else currentP[1] fi
    //TODO: use new array if .. else
    
    for field i in 1..256 do
    j = 255-i
    // 1 == boolCheck(exponent[j])
    doubledPoint = add(doubledPoint, doubledPoint, params)
    
    tempP = add(currentP, doubledPoint, params)
    currentP[0] = if exponent[j] == 1 then tempP[0] else currentP[0] fi
    currentP[1] = if exponent[j] == 1 then tempP[1] else currentP[1] fi
    //TODO: use new array if .. else
    endfor

    1 == assertOnCurve(currentP, params)
    return currentP