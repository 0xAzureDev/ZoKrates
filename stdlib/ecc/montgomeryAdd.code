
// lamda <-- (in2[1] - in1[1]) / (in2[0] - in1[0]);
// lamda * (in2[0] - in1[0]) === (in2[1] - in1[1]);

// out[0] <== B*lamda*lamda - A - in1[0] -in2[0];
// out[1] <== lamda * (in1[0] - out[0]) - in1[1];
// Source... where is yOut from?
def main(field[2] pt1, field[2] pt2, field[8] context) -> (field[2]):

	field a = context[0]
	field d = context[1]
	
	field x1 = pt1[0]
	field y1 = pt1[1]
	field x2 = pt2[0]
	field y2 = pt2[1]

	field A = (2 * (a + d)) / (a - d)
	field B = 4 / (a - d)

	field alpha = (y2 - y1) / (x2 - x1)
	field xOut = B*alpha*alpha - A - x1 - x2
	field yOut = alpha * (x1 - xOut) - y1 //TODO: add source

	return [xOut, yOut]