import "hashes/sha256/512bit" as sha256
import "utils/multiplexer/256bit" as multiplex

// Merkle-Tree inclusion proof for tree depth 3

def main(field treeDepth, bool[256] rootDigest, private bool[256] leafDigest, private bool[2] directionSelector, bool[256] PathDigest0, private bool[256] PathDigest1) -> ():

	//Setup
	bool[256] currentDigest = leafDigest
	field counter = 1
	bool currentDirection = false
	
	//Loop up the tree
	currentDirection = directionSelector[0]
	bool[256] lhs = multiplex(currentDirection, currentDigest, PathDigest0)
	bool[256] rhs = multiplex(!currentDirection, currentDigest, PathDigest0)
	currentDigest = sha256(lhs, rhs)
	counter = counter + 1

	currentDirection = directionSelector[1]
	lhs = multiplex(currentDirection, currentDigest, PathDigest1)
	rhs = multiplex(!currentDirection, currentDigest, PathDigest1)
	currentDigest = sha256(lhs, rhs)
	counter = counter + 1

	counter == treeDepth 
	rootDigest == currentDigest

	return